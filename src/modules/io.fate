from '../runtime' import Continuation
from './support' import make, timeout as doTimeout

export from './support' import print

export let streamConsumer = (resolve → stream →
  def waitFor(stream, content)
    stream.removeAllListeners()
    stream.on('data',  data → waitFor(stream, content + data))
          .on('end',        → [content]      | resolve)
          .on('error', err  → [content, err] | resolve)
  end

  waitFor(stream, '')
)

export def timeout(delay)
  make(Continuation, resolve →
    doTimeout(→ resolve(delay), delay)
  )
end
