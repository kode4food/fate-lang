from '../runtime' import isPattern, definePattern

export from '../runtime'
import isFalse as False
     , isTrue as True
     , isNothing as Nothing
     , isSomething as Something
     , isPattern as Pattern
     , isObject as Object
     , isArray as Array

from './support' import isA, setProperty

# Warning: this module assumes JavaScript-specific methods
#
#   Array.prototype.length

export let String = isA('string')
export let EmptyString = ~''

export let NonEmptyString = ~(
  isA('string') && ~(it.length > 0)
)

export
let Number = isA('number')
  , PositiveNumber = Number && ~(it > 0)
  , NonNegativeNumber = Number && ~(it ≥ 0)
  , NegativeNumber = Number && ~(it < 0)
  , Integer = Number && ~(it mod 1 = 0)

export let PositiveInteger = ~(
  Number && ~(it > 0 and it mod 1 = 0)
)

export let NonNegativeInteger = ~(
  Number && ~(it ≥ 0 and it mod 1 = 0)
)

export let NegativeInteger = ~(
  Number && ~(it < 0 and it mod 1 = 0)
)

export
let EmptyArray = Array && ~(it.length = 0)
  , NonEmptyArray = Array && ~(it.length > 0)
  , Boolean = isA('boolean')
  , Function = isA('function')

export def ArrayOf(Pattern as elementPattern)
  definePattern(value →
    return false unless Array(value)
    for item in value where not elementPattern(item)
      return false
    end
    return true
  )
end

export def MinLength(NonNegativeInteger as min)
  Array && ~(it.length ≥ min)
end

export def MaxLength(NonNegativeInteger as max)
  Array && ~(it.length ≤ max)
end
