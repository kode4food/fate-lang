from math import random

def patternTest(test)
  test.expect(10)
  
  when a(x, y) & b(g, h)
    x.type = 'Not' | test.ok
    x.value = 'another' | test.ok
    y = 'goodbye' | test.ok
    g = 'you' | test.ok
    h = 40 | test.ok
  end

  when a({ type: 'Test' } as x, y) & b(g, ? > 50 as h)
    x.type = 'Test' | test.ok
    x.value = 'aValue' | test.ok
    y = 'hello' | test.ok
    g = 'there' | test.ok
    h = 99 | test.ok
  end

  setTimeout( () -> b('there', 99), random() * 100 )
  setTimeout( () -> a({ type: 'Not', value: 'another' }, 'goodbye'),  random() * 100 )
  setTimeout( () -> b('you', 40),  random() * 100 )
  setTimeout( () -> a({ type: 'Test', value: 'aValue'}, 'hello'),  random() * 100 )
  setTimeout( () -> test.done(), 150)
end

export patternTest
