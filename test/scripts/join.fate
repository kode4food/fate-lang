def patternTest(test)
  test.expect(10)

  when a({ value: 'another' } as x, y) & b(g, h)
    x.type = 'Not' | test.ok
    x.value = 'another' | test.ok
    y = 'goodbye' | test.ok
    g = 'you' | test.ok
    h = 40 | test.ok
  end

  when a({ type: 'Test' } as x, y) & b(g, ? > 50 as h)
    x.type = 'Test' | test.ok
    x.value = 'aValue' | test.ok
    y = 'hello' | test.ok
    g = 'there' | test.ok
    h = 99 | test.ok
  end

  setTimeout( () -> a({ type: 'Test', value: 'aValue'}, 'hello'),  10 )
  setTimeout( () -> b('there', 99), 20 )
  setTimeout( () -> a({ type: 'Not', value: 'another' }, 'goodbye'),  30 )
  setTimeout( () -> b('you', 40),  40 )
  setTimeout( () -> b('there', 120), 60 )
  setTimeout( () -> test.done(), 100)
end

export patternTest
