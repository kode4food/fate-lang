import nodeunit

from test import wrap

def explicit(test)
  let { isOk } = wrap(test)

  import './basics.fate' as basics

  basics.tests | isOk
  test.done()
end

def multiple(test)
  let { equalTo } = wrap(test)

  import './basics' as basics1
  import './basics' as basics2

  basics1 | equalTo(basics2)
  test.done()
end

def parent(test)
  let { equalTo } = wrap(test)

  import '../assets/module1' as module1

  module1.test_value | equalTo('right!')
  test.done()
end

def parentFrom(test)
  let { equalTo } = wrap(test)

  from '../assets/module1' import test_value as testv

  testv | equalTo('right!')
  test.done()
end

def systemImport(test)
  let { equalTo } = wrap(test)

  import test as assert

  99 | assert.equalTo(99)
  test.done()
end

export let tests = nodeunit.testCase({
  "Explicit Single Import": explicit,
  "Multiple Duplicated Imports": multiple,
  "Importing from a Parent Dir": parent,
  "'from' Import from a Parent": parentFrom,
  "Pure System Import": systemImport
})
