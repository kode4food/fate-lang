import nodeunit

from test import equalTo

let a0 = "parent"
let b0 = true

def scopeTest(test)
 	let greeting = "Not Hello"
 	def localGreeting()
 		let greeting = "Local Hello"
 		return greeting
	end

	greeting        | equalTo("Not Hello")
	localGreeting() | equalTo("Local Hello")

	greeting + " " + localGreeting() | equalTo("Not Hello Local Hello")

	test.done()
end

def nestedScopeTest(test)
	let a = 3
	let b = 4
	def first()
		let a = 12
		let b = 30
		def second()
			let a = 2
			let b = 3
			return a * b
		end
		return a + b + second()
	end

	a       | equalTo(3)
	b       | equalTo(4)
	first() | equalTo(48)

	test.done()
end

def argumentsScopeTest(test)
	let a = 0
	let b = 0
	def add(a, b)
		return a + b
	end

	add(2,3) | equalTo(5)
	test.done()
end

def scopeOverrideTest(test)
	let b = a0
	let a0 = "child"

	a0 | equalTo("child")
	b  | equalTo("parent")
	test.done()
end

def conditionalScopeTest(test)
	let c0 = a0
	if b0
		let a0 = "child"
		let d0 = a0
	end

	a0 | equalTo("child")
	b0 | equalTo(true)
	c0 | equalTo("parent")
	d0 | equalTo("child")
	test.done()
end

let tests = nodeunit.testCase({
	"Testing Scopes": scopeTest,
	"Testing Nested Scopes": nestedScopeTest,
	"Testing Argument Scopes": argumentsScopeTest,
	"Testing Scope Overrides": scopeOverrideTest,
	"Testing Conditional Scopes": conditionalScopeTest
})

export tests